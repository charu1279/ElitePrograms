/*The program must accept an integer matrix of size R*C as the input. The program must print the elements from the top left of the matrix in diagonally zig-zag order.

Boundary Condition(s):
2 <= R, C <= 100

Input Format:
The first line contains R and C separated by a space.
The next R lines, each containing C integers separated by a space.

Output Format:
The first line contains all R*C elements in diagonally zig-zag order, with the elements separated by a space.

Example Input/Output 1:
Input:
3 7
1 9 3 9 4 7 2
4 5 2 4 8 3 5
9 3 6 3 5 1 8

Output:
1 9 4 9 5 3 9 2 3 6 4 4 7 8 3 5 3 2 5 1 8

Example Input/Output 2:
Input:
4 4
29 76 80 57
18 69 47 36
36 26 68 61
48 34 30 82

Output:
29 76 18 36 69 80 57 47 26 48 34 68 36 61 30 82
*/

#include <stdio.h>

int main()
{
    int r,c;
    scanf("%d %d",&r,&c);
    int a[r][c];
    for(int row=0;row<r;row++){
        for(int col=0;col<c;col++){
            scanf("%d ",&a[row][col]);
        }
    }
    int row=r-1,col=c-1,dir=1;
    for(int i=1;i<=r+c-1;i++){
        if(dir==1){
            while(row>=0 && col<c){
                printf("%d ",a[row][col]);
                row--;
                col++;
            }
            dir=-1;
            if(row<0){
                row=0;
                col-=2;
            }
            if(col>=c){
                col=c-1;
                row+=2;
            }
        }
        else{
            while(row<r && col>=0){
                printf("%d ",a[row][col]);
                row++;
                col--;
            }
            dir=1;
            if(col<0){
                col=0;
                row-=2;
            }
            if(row>=r){
                row=r-1;
            }
        }
    }
}



