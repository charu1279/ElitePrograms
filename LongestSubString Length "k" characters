/*The program must accept a string S and an integer K as the input. The program must print the length of the longest substring having exactly K unique characters as the output.

Boundary Condition(s):
1 <= Length of S <= 10^5
1 <= K <= 26

Input Format:
The first line contains S and K separated by a space.

Output Format:
The first line contains the length of the longest substring having exactly K unique characters.

Example Input/Output 1:
Input:
mirror 2

Output:
4

Explanation:
Here K = 2.
The longest substring having exactly 2 unique characters is rror.
So the length of the longest substring rror is 4.
Hence the output is 4

Example Input/Output 2:
Input:
abbcdbbaabbace 3

Output:
8*/

#include <stdio.h>

int main()
{
    char s[10000];
    scanf("%s",s);
    int k;
    scanf("%d",&k);
    int st=0,e=0,u=0,max=0;
    int l=strlen(s),a[128]={0};
    a[s[e]]=1;
    u=1;
    while(e<l){
        if(k==u){
            int curr=e-st+1;
            if(curr>max){
                max=curr;
            }
        }
        if(u<=k){
            e++;
            a[s[e]]++;
            if(a[s[e]]==1){
                u++;
            }
        }
        else{
            a[s[st]]--;
            if(a[s[st]]==0){
                u--;
            }
            st++;
        }
    }
    printf("%d",max);
}



